/**
 * 样式相关提示词
 * Tailwind CSS 和设计系统提示词
 */

export const STYLE_PROMPTS = {
  /**
   * Tailwind CSS 基础提示词
   */
  TAILWIND_BASICS: `请使用 Tailwind CSS 进行样式设计，要求：

**样式原则：**
- 优先使用 Tailwind 预设类，避免自定义 CSS
- 使用语义化的 CSS 变量 (hsl(var(--primary)))
- 实现响应式设计 (sm:, md:, lg:, xl:)
- 支持暗色模式 (dark: 前缀)

**布局模式：**
- 使用 Flexbox 和 Grid 进行布局
- 合理的间距和对齐
- 响应式容器和断点
- 流式布局和固定布局结合

**组件样式：**
- 使用 cva 定义组件变体
- 提供多种尺寸和颜色选项
- 实现悬停和焦点状态
- 支持禁用和加载状态

**设计系统：**
- 使用项目定义的颜色变量
- 遵循间距和字体规范
- 保持视觉一致性
- 考虑品牌和主题要求`,

  /**
   * 响应式设计提示词
   */
  RESPONSIVE_DESIGN: `请实现响应式设计，要求：

**断点策略：**
- 移动优先设计 (mobile-first)
- 使用 Tailwind 响应式前缀 (sm:, md:, lg:, xl:, 2xl:)
- 合理的断点选择和布局调整
- 考虑不同设备的使用场景

**布局适配：**
- 灵活的网格系统
- 可折叠的导航和侧边栏
- 自适应的卡片和列表
- 响应式的图片和媒体

**交互适配：**
- 触摸友好的按钮和链接
- 适当的点击区域大小
- 移动端的手势支持
- 键盘导航兼容

**性能考虑：**
- 图片懒加载和优化
- 条件渲染和代码分割
- 减少不必要的重渲染
- 优化移动端性能`,

  /**
   * 暗色模式提示词
   */
  DARK_MODE: `请实现暗色模式支持，要求：

**主题系统：**
- 使用 CSS 变量定义颜色
- 支持 light/dark 主题切换
- 实现平滑的主题过渡
- 保持主题状态持久化

**颜色设计：**
- 使用语义化的颜色变量
- 确保暗色模式下的可读性
- 保持品牌色彩的一致性
- 考虑颜色对比度要求

**组件适配：**
- 所有组件支持暗色模式
- 图标和插图的主题适配
- 边框和阴影的调整
- 状态颜色的适配

**用户体验：**
- 系统主题检测
- 手动主题切换
- 主题切换动画
- 主题偏好记忆`,

  /**
   * 设计系统提示词
   */
  DESIGN_SYSTEM: `请遵循设计系统规范，要求：

**颜色系统：**
- 使用定义的主色调和辅助色
- 遵循颜色语义和用途
- 确保可访问性对比度
- 支持品牌色彩扩展

**间距系统：**
- 使用 8px 基础间距网格
- 遵循间距比例和层次
- 保持布局的一致性
- 支持紧凑和宽松模式

**字体系统：**
- 使用定义的字体族和大小
- 遵循字体层次和权重
- 确保跨平台兼容性
- 支持多语言字体

**组件规范：**
- 遵循组件设计规范
- 保持交互行为一致
- 使用标准的尺寸和变体
- 支持组件定制和扩展`,

  /**
   * 动画和过渡提示词
   */
  ANIMATIONS: `请实现动画和过渡效果，要求：

**动画原则：**
- 使用有意义的动画
- 保持动画的一致性
- 考虑性能和可访问性
- 支持动画偏好设置

**过渡效果：**
- 使用 Tailwind 过渡类
- 实现平滑的状态变化
- 提供视觉反馈
- 避免过度动画

**交互动画：**
- 悬停和焦点效果
- 点击和激活反馈
- 加载和进度指示
- 错误和成功状态

**性能优化：**
- 使用 CSS 变换和透明度
- 避免引起重排的属性
- 实现硬件加速
- 提供动画降级选项`,

  /**
   * 可访问性样式提示词
   */
  ACCESSIBILITY_STYLES: `请实现可访问性样式，要求：

**颜色对比：**
- 确保文本对比度 ≥ 4.5:1
- 大文本对比度 ≥ 3:1
- 非文本元素对比度 ≥ 3:1
- 提供高对比度模式

**焦点指示：**
- 清晰的焦点环样式
- 足够的焦点对比度
- 合理的焦点顺序
- 自定义焦点样式

**状态指示：**
- 错误状态的视觉指示
- 成功状态的确认反馈
- 加载状态的进度指示
- 禁用状态的视觉区分

**文本可读性：**
- 合适的字体大小和行高
- 充足的文本间距
- 清晰的文本层次
- 支持文本缩放`,

  /**
   * 性能优化样式提示词
   */
  PERFORMANCE_STYLES: `请优化样式性能，要求：

**CSS 优化：**
- 使用高效的选择器
- 避免复杂的嵌套
- 减少重排和重绘
- 启用 GPU 加速

**加载优化：**
- 关键 CSS 内联
- 非关键 CSS 延迟加载
- 字体预加载和显示
- 图片懒加载

**运行时优化：**
- 避免强制同步布局
- 使用 CSS 变换代替位置
- 优化动画性能
- 减少样式计算

**构建优化：**
- CSS 压缩和合并
- 未使用样式清理
- 关键路径优化
- 缓存策略配置`,
} as const;

/**
 * 获取样式提示词
 */
export function getStylePrompt(
  type: keyof typeof STYLE_PROMPTS
): string {
  return STYLE_PROMPTS[type];
}

/**
 * 根据样式需求获取组合提示词
 */
export function getStylePrompts(requirements: string[]): string {
  const prompts = requirements.map(req => {
    const key = req.toUpperCase().replace(/[-\s]/g, '_') as keyof typeof STYLE_PROMPTS;
    return STYLE_PROMPTS[key] || '';
  }).filter(Boolean);

  return prompts.join('\n\n');
}

/**
 * 获取完整的样式指导
 */
export function getCompleteStyleGuide(): string {
  return [
    STYLE_PROMPTS.TAILWIND_BASICS,
    STYLE_PROMPTS.RESPONSIVE_DESIGN,
    STYLE_PROMPTS.DARK_MODE,
    STYLE_PROMPTS.DESIGN_SYSTEM,
  ].join('\n\n');
}